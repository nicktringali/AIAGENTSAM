version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: auto-debug-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ../logs/nginx:/var/log/nginx
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - auto-debug-network

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.agent
    container_name: auto-debug-api
    env_file:
      - ../.env
    volumes:
      - ../data:/data
      - ../logs:/logs
      - /var/run/docker.sock:/var/run/docker.sock
    expose:
      - "8000"
    depends_on:
      - redis
      - chromadb
    restart: unless-stopped
    networks:
      - auto-debug-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: auto-debug-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ../data/redis:/data
    expose:
      - "6379"
    restart: unless-stopped
    networks:
      - auto-debug-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  chromadb:
    image: chromadb/chroma:latest
    container_name: auto-debug-chromadb
    volumes:
      - ../data/chroma:/chroma/chroma
    expose:
      - "8000"
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=FALSE
    restart: unless-stopped
    networks:
      - auto-debug-network

  prometheus:
    image: prom/prometheus:latest
    container_name: auto-debug-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ../data/prometheus:/prometheus
    expose:
      - "9090"
    restart: unless-stopped
    networks:
      - auto-debug-network

  grafana:
    image: grafana/grafana:latest
    container_name: auto-debug-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://your-domain.com/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - ../data/grafana:/var/lib/grafana
      - ../monitoring/grafana-dashboard.json:/etc/grafana/provisioning/dashboards/main.json:ro
    expose:
      - "3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - auto-debug-network

  sandbox:
    build:
      context: ..
      dockerfile: docker/Dockerfile.sandbox
    container_name: auto-debug-sandbox
    privileged: false
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
    restart: unless-stopped
    networks:
      - sandbox-network

networks:
  auto-debug-network:
    driver: bridge
  sandbox-network:
    driver: bridge
    internal: true  # No external network access

volumes:
  redis-data:
  chroma-data:
  prometheus-data:
  grafana-data: